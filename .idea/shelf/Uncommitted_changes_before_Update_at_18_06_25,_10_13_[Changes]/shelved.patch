Index: src/main/java/org/example/garagemanagementapi/service/GarageService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.garagemanagementapi.service;\n\nimport org.example.garagemanagementapi.model.Spot;\nimport org.example.garagemanagementapi.model.Vehicle;\nimport org.example.garagemanagementapi.repository.SpotRepository;\nimport org.example.garagemanagementapi.repository.VehicleRepository;\nimport org.springframework.stereotype.Service;\n\nimport java.time.LocalDateTime;\nimport java.util.Optional;\n@Service\npublic class GarageService {\n\n    private final VehicleRepository vehicleRepository;\n    private final SpotRepository spotRepository;\n\n    public GarageService(VehicleRepository vehicleRepository, SpotRepository spotRepository) {\n        this.vehicleRepository = vehicleRepository;\n        this.spotRepository = spotRepository;\n    }\n\n    public Vehicle registerEntry(String licensePlate, Double lat, Double lng) {\n        Vehicle vehicle = new Vehicle(licensePlate, LocalDateTime.now());\n        return vehicleRepository.save(vehicle);\n    }\n\n    public String parkVehicle(String licensePlate, Double lat, Double lng) {\n        // Agora busca qualquer veículo, independente do exitTime\n        Optional<Vehicle> vehicleOpt = vehicleRepository.findFirstByLicensePlate(licensePlate);\n\n        if (vehicleOpt.isEmpty()) {\n            throw new RuntimeException(\"Veículo não encontrado para estacionar\");\n        }\n\n        Spot spot = spotRepository.findByLatAndLng(lat, lng)\n                .orElseGet(() -> {\n                    Spot newSpot = new Spot();\n                    newSpot.setLat(lat);\n                    newSpot.setLng(lng);\n                    newSpot.setSector(\"A\"); // ou lógica dinâmica\n                    return spotRepository.save(newSpot);\n                });\n\n        spot.setOccupied(true);\n        spotRepository.save(spot);\n\n        Vehicle vehicle = vehicleOpt.get();\n        vehicle.setSpot(spot);\n        vehicleRepository.save(vehicle);\n\n        return \"Veículo estacionado\";\n    }\n\n    public String registerExit(String licensePlate) {\n        // Agora busca qualquer veículo, independente do exitTime\n        Optional<Vehicle> vehicleOpt = vehicleRepository.findFirstByLicensePlate(licensePlate);\n\n        if (vehicleOpt.isEmpty()) {\n            throw new RuntimeException(\"Veículo não encontrado para saída\");\n        }\n\n        Vehicle vehicle = vehicleOpt.get();\n        vehicle.setExitTime(LocalDateTime.now());\n\n        Spot spot = vehicle.getSpot();\n        if (spot != null) {\n            spot.setOccupied(false);\n            spotRepository.save(spot);\n        }\n\n        vehicleRepository.save(vehicle);\n\n        return \"Saída registrada\";\n    }\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/garagemanagementapi/service/GarageService.java b/src/main/java/org/example/garagemanagementapi/service/GarageService.java
--- a/src/main/java/org/example/garagemanagementapi/service/GarageService.java	(revision 5ce3c54b5a22b3f931e26791c44aa24104a39960)
+++ b/src/main/java/org/example/garagemanagementapi/service/GarageService.java	(date 1750192046872)
@@ -1,31 +1,49 @@
 package org.example.garagemanagementapi.service;
 
+import org.example.garagemanagementapi.model.Sector;
 import org.example.garagemanagementapi.model.Spot;
 import org.example.garagemanagementapi.model.Vehicle;
+import org.example.garagemanagementapi.repository.SectorRepository;
 import org.example.garagemanagementapi.repository.SpotRepository;
 import org.example.garagemanagementapi.repository.VehicleRepository;
 import org.springframework.stereotype.Service;
 
 import java.time.LocalDateTime;
+import java.util.List;
 import java.util.Optional;
+
 @Service
 public class GarageService {
 
     private final VehicleRepository vehicleRepository;
     private final SpotRepository spotRepository;
+    private final SectorRepository sectorRepository;
 
-    public GarageService(VehicleRepository vehicleRepository, SpotRepository spotRepository) {
+    public GarageService(VehicleRepository vehicleRepository, SpotRepository spotRepository, SectorRepository sectorRepository) {
         this.vehicleRepository = vehicleRepository;
         this.spotRepository = spotRepository;
+        this.sectorRepository = sectorRepository;
     }
 
     public Vehicle registerEntry(String licensePlate, Double lat, Double lng) {
+        Spot spot = spotRepository.findByLatAndLng(lat, lng)
+                .orElseThrow(() -> new RuntimeException("Vaga não encontrada para entrada"));
+
+        String sectorName = spot.getSector();
+        Sector sector = sectorRepository.findBySector(sectorName)
+                .orElseThrow(() -> new RuntimeException("Setor não encontrado"));
+
+        double occupationRate = getSectorOccupationRate(sectorName);
+        double dynamicPrice = calculateDynamicPrice(sector.getBasePrice(), occupationRate);
+
         Vehicle vehicle = new Vehicle(licensePlate, LocalDateTime.now());
-        return vehicleRepository.save(vehicle);
+        vehicle.setFinalPrice(dynamicPrice); // ⚠️ Adicione esse campo na entidade Vehicle
+        vehicleRepository.save(vehicle);
+
+        return vehicle;
     }
 
     public String parkVehicle(String licensePlate, Double lat, Double lng) {
-        // Agora busca qualquer veículo, independente do exitTime
         Optional<Vehicle> vehicleOpt = vehicleRepository.findFirstByLicensePlate(licensePlate);
 
         if (vehicleOpt.isEmpty()) {
@@ -33,15 +51,10 @@
         }
 
         Spot spot = spotRepository.findByLatAndLng(lat, lng)
-                .orElseGet(() -> {
-                    Spot newSpot = new Spot();
-                    newSpot.setLat(lat);
-                    newSpot.setLng(lng);
-                    newSpot.setSector("A"); // ou lógica dinâmica
-                    return spotRepository.save(newSpot);
-                });
+                .orElseThrow(() -> new RuntimeException("Vaga não registrada na garagem"));
 
         spot.setOccupied(true);
+        spot.setLicensePlate(licensePlate);
         spotRepository.save(spot);
 
         Vehicle vehicle = vehicleOpt.get();
@@ -52,7 +65,6 @@
     }
 
     public String registerExit(String licensePlate) {
-        // Agora busca qualquer veículo, independente do exitTime
         Optional<Vehicle> vehicleOpt = vehicleRepository.findFirstByLicensePlate(licensePlate);
 
         if (vehicleOpt.isEmpty()) {
@@ -65,6 +77,7 @@
         Spot spot = vehicle.getSpot();
         if (spot != null) {
             spot.setOccupied(false);
+            spot.setLicensePlate(null);
             spotRepository.save(spot);
         }
 
@@ -72,5 +85,24 @@
 
         return "Saída registrada";
     }
-}
+
+    private double getSectorOccupationRate(String sectorName) {
+        List<Spot> sectorSpots = spotRepository.findAllBySector(sectorName);
+        long total = sectorSpots.size();
+        long occupied = sectorSpots.stream().filter(Spot::isOccupied).count();
+
+        return total == 0 ? 0 : (double) occupied / total;
+    }
 
+    private double calculateDynamicPrice(double basePrice, double occupationRate) {
+        if (occupationRate < 0.25) {
+            return basePrice * 0.9;
+        } else if (occupationRate < 0.5) {
+            return basePrice;
+        } else if (occupationRate < 0.75) {
+            return basePrice * 1.10;
+        } else {
+            return basePrice * 1.25;
+        }
+    }
+}
Index: src/main/java/org/example/garagemanagementapi/controller/GarageController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/garagemanagementapi/controller/GarageController.java b/src/main/java/org/example/garagemanagementapi/controller/GarageController.java
new file mode 100644
--- /dev/null	(date 1750192553091)
+++ b/src/main/java/org/example/garagemanagementapi/controller/GarageController.java	(date 1750192553091)
@@ -0,0 +1,13 @@
+package org.example.garagemanagementapi.controller;
+
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.RestController;
+
+@RestController
+public class GarageController {
+
+    @GetMapping("/garage")
+    public String garage() {
+        return "OK - Garage endpoint working";
+    }
+}
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"b52ce386-16c4-485b-98ca-53601dad56e6\" name=\"Changes\" comment=\"classe spot, spot repository e config banco de dados\">\n      <change afterPath=\"$PROJECT_DIR$/clean.sh\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/start-garage.sh\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/start.sh\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Dockerfile\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Dockerfile\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/docker-compose.yml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/docker-compose.yml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/GarageManagementApiApplication.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/GarageManagementApiApplication.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/controller/EntryController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/controller/EntryController.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/controller/PlateStatusController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/controller/PlateStatusController.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/controller/RevenueController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/controller/RevenueController.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/controller/SpotController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/controller/SpotController.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/controller/WebhookController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/controller/WebhookController.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/dto/WebhookEvent.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/dto/WebhookEvent.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/model/Spot.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/model/Spot.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/model/Vehicle.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/model/Vehicle.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/repository/SpotRepository.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/repository/SpotRepository.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/repository/VehicleRepository.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/repository/VehicleRepository.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/service/GarageService.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/service/GarageService.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/application.properties\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/application.properties\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/test/resources/application-test.properties\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/test/resources/application-test.properties\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/classes/application.properties\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/application.properties\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/GarageManagementApiApplication.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/GarageManagementApiApplication.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/config/GlobalExceptionHandler.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/config/GlobalExceptionHandler.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/controller/EntryController.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/controller/EntryController.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/controller/PlateStatusController.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/controller/PlateStatusController.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/controller/RevenueController.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/controller/RevenueController.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/controller/SpotController.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/controller/SpotController.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/controller/WebhookController.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/controller/WebhookController.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/dto/WebhookEvent.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/dto/WebhookEvent.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/model/Spot.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/model/Spot.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/model/Vehicle.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/model/Vehicle.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/repository/SpotRepository.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/repository/SpotRepository.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/repository/VehicleRepository.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/repository/VehicleRepository.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/service/GarageService.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/service/GarageService.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/garage-management-api-1.0-SNAPSHOT.jar\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/garage-management-api-1.0-SNAPSHOT.jar\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/garage-management-api-1.0-SNAPSHOT.jar.original\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/garage-management-api-1.0-SNAPSHOT.jar.original\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/test-classes/application-test.properties\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/test-classes/application-test.properties\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Interface\" />\n        <option value=\"package-info\" />\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$\" value=\"feature/separandoEndpoints\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitHubPullRequestSearchHistory\">{\n  &quot;lastFilter&quot;: {\n    &quot;state&quot;: &quot;OPEN&quot;,\n    &quot;assignee&quot;: &quot;MarianeAnjos&quot;\n  }\n}</component>\n  <component name=\"GithubPullRequestsUISettings\"><![CDATA[{\n  \"selectedUrlAndAccountId\": {\n    \"url\": \"https://github.com/MarianeAnjos/garage-management\",\n    \"accountId\": \"982d8f02-dd70-42a6-bca7-dda7cf11ac9c\"\n  }\n}]]></component>\n  <component name=\"MavenImportPreferences\">\n    <option name=\"generalSettings\">\n      <MavenGeneralSettings>\n        <option name=\"workOffline\" value=\"true\" />\n      </MavenGeneralSettings>\n    </option>\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 3\n}</component>\n  <component name=\"ProjectId\" id=\"2yKM0d0HAMLJHhbfx5tvmuXGDKV\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"ASKED_SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\n    \"Application.GarageManagementApiApplication.executor\": \"Run\",\n    \"JUnit.BillingServiceTest.executor\": \"Run\",\n    \"JUnit.PricingServiceTest.executor\": \"Run\",\n    \"JUnit.WebhookControllerTest.executor\": \"Run\",\n    \"JUnit.controller in garage-management-api.executor\": \"Run\",\n    \"JUnit.garagemanagementapi in garage-management-api.executor\": \"Run\",\n    \"JUnit.java in garage-management-api.executor\": \"Run\",\n    \"Maven.garage-management-api [build].executor\": \"Run\",\n    \"Maven.garage-management-api [clean,install,-X].executor\": \"Run\",\n    \"Maven.garage-management-api [clean,install].executor\": \"Run\",\n    \"Maven.garage-management-api [clean].executor\": \"Run\",\n    \"Maven.garage-management-api [mvn...].executor\": \"Run\",\n    \"Maven.garage-management-api [run].executor\": \"Run\",\n    \"Maven.garage-management-api [spring-boot:run].executor\": \"Run\",\n    \"ModuleVcsDetector.initialDetectionPerformed\": \"true\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"RunOnceActivity.git.unshallow\": \"true\",\n    \"SHELLCHECK.PATH\": \"/Users/marianeferreiradosanjos/Library/Application Support/JetBrains/IdeaIC2025.1/plugins/Shell Script/shellcheck\",\n    \"git-widget-placeholder\": \"main\",\n    \"last_directory_selection\": \"/Users/marianeferreiradosanjos/garage-management-api/src/main/java/org/example/garagemanagementapi/controller\",\n    \"last_opened_file_path\": \"/Users/marianeferreiradosanjos/garage-management\",\n    \"project.structure.last.edited\": \"Modules\",\n    \"project.structure.proportion\": \"0.15\",\n    \"project.structure.side.proportion\": \"0.2\",\n    \"settings.editor.selected.configurable\": \"preferences.keymap\"\n  }\n}]]></component>\n  <component name=\"RecentsManager\">\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\n      <recent name=\"org.example.garagemanagementapi.controller\" />\n    </key>\n  </component>\n  <component name=\"RunAnythingCache\">\n    <option name=\"myCommands\">\n      <command value=\"mvn run\" />\n      <command value=\"mvn mvn spring-boot:run \" />\n      <command value=\"mvn spring-boot:run\" />\n      <command value=\"mvn build\" />\n      <command value=\"mvn clean\" />\n      <command value=\"mvn clean install -X \" />\n      <command value=\"mvn clean install \" />\n    </option>\n  </component>\n  <component name=\"RunManager\" selected=\"Application.GarageManagementApiApplication\">\n    <configuration name=\"GarageManagementApiApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.example.garagemanagementapi.GarageManagementApiApplication\" />\n      <module name=\"garage-management-api\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"org.example.garagemanagementapi.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"BillingServiceTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"garage-management-api\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"org.example.garagemanagementapi.controller.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <option name=\"PACKAGE_NAME\" value=\"org.example.garagemanagementapi.controller\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.example.garagemanagementapi.controller.BillingServiceTest\" />\n      <option name=\"TEST_OBJECT\" value=\"class\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"PricingServiceTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"garage-management-api\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"org.example.garagemanagementapi.controller.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <option name=\"PACKAGE_NAME\" value=\"org.example.garagemanagementapi.service\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.example.garagemanagementapi.service.PricingServiceTest\" />\n      <option name=\"TEST_OBJECT\" value=\"class\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"WebhookControllerTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"garage-management-api\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"org.example.garagemanagementapi.controller.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <option name=\"PACKAGE_NAME\" value=\"org.example.garagemanagementapi.controller\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.example.garagemanagementapi.controller.WebhookControllerTest\" />\n      <option name=\"TEST_OBJECT\" value=\"class\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"controller in garage-management-api\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"garage-management-api\" />\n      <option name=\"TEST_OBJECT\" value=\"directory\" />\n      <dir value=\"$PROJECT_DIR$/src/test/java/controller\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Application.GarageManagementApiApplication\" />\n        <item itemvalue=\"JUnit.WebhookControllerTest\" />\n        <item itemvalue=\"JUnit.PricingServiceTest\" />\n        <item itemvalue=\"JUnit.controller in garage-management-api\" />\n        <item itemvalue=\"JUnit.BillingServiceTest\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"b52ce386-16c4-485b-98ca-53601dad56e6\" name=\"Changes\" comment=\"\" />\n      <created>1749578589279</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1749578589279</updated>\n    </task>\n    <servers />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 5ce3c54b5a22b3f931e26791c44aa24104a39960)
+++ b/.idea/workspace.xml	(date 1750252423827)
@@ -5,46 +5,15 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="b52ce386-16c4-485b-98ca-53601dad56e6" name="Changes" comment="classe spot, spot repository e config banco de dados">
-      <change afterPath="$PROJECT_DIR$/clean.sh" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/start-garage.sh" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/start.sh" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/controller/GarageController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/dto/GarageConfigDTO.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/dto/SectorDTO.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/dto/SpotDTO.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/model/Sector.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/repository/SectorRepository.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/Dockerfile" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/docker-compose.yml" beforeDir="false" afterPath="$PROJECT_DIR$/docker-compose.yml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/GarageManagementApiApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/GarageManagementApiApplication.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/controller/EntryController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/controller/EntryController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/controller/PlateStatusController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/controller/PlateStatusController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/controller/RevenueController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/controller/RevenueController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/controller/SpotController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/controller/SpotController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/controller/WebhookController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/controller/WebhookController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/dto/WebhookEvent.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/dto/WebhookEvent.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/model/Spot.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/model/Spot.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/model/Vehicle.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/model/Vehicle.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/repository/SpotRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/repository/SpotRepository.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/repository/VehicleRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/repository/VehicleRepository.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/service/GarageService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/garagemanagementapi/service/GarageService.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/application.properties" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/test/resources/application-test.properties" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/resources/application-test.properties" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/application.properties" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/GarageManagementApiApplication.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/GarageManagementApiApplication.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/config/GlobalExceptionHandler.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/config/GlobalExceptionHandler.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/controller/EntryController.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/controller/EntryController.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/controller/PlateStatusController.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/controller/PlateStatusController.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/controller/RevenueController.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/controller/RevenueController.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/controller/SpotController.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/controller/SpotController.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/controller/WebhookController.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/controller/WebhookController.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/dto/WebhookEvent.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/dto/WebhookEvent.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/model/Spot.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/model/Spot.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/model/Vehicle.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/model/Vehicle.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/repository/SpotRepository.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/repository/SpotRepository.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/repository/VehicleRepository.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/repository/VehicleRepository.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/service/GarageService.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/org/example/garagemanagementapi/service/GarageService.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/garage-management-api-1.0-SNAPSHOT.jar" beforeDir="false" afterPath="$PROJECT_DIR$/target/garage-management-api-1.0-SNAPSHOT.jar" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/garage-management-api-1.0-SNAPSHOT.jar.original" beforeDir="false" afterPath="$PROJECT_DIR$/target/garage-management-api-1.0-SNAPSHOT.jar.original" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst" beforeDir="false" afterPath="$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst" beforeDir="false" afterPath="$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst" beforeDir="false" afterPath="$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/test-classes/application-test.properties" beforeDir="false" afterPath="$PROJECT_DIR$/target/test-classes/application-test.properties" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -74,12 +43,12 @@
     &quot;assignee&quot;: &quot;MarianeAnjos&quot;
   }
 }</component>
-  <component name="GithubPullRequestsUISettings"><![CDATA[{
-  "selectedUrlAndAccountId": {
-    "url": "https://github.com/MarianeAnjos/garage-management",
-    "accountId": "982d8f02-dd70-42a6-bca7-dda7cf11ac9c"
-  }
-}]]></component>
+  <component name="GithubPullRequestsUISettings">{
+  &quot;selectedUrlAndAccountId&quot;: {
+    &quot;url&quot;: &quot;https://github.com/MarianeAnjos/garage-management&quot;,
+    &quot;accountId&quot;: &quot;982d8f02-dd70-42a6-bca7-dda7cf11ac9c&quot;
+  }
+}</component>
   <component name="MavenImportPreferences">
     <option name="generalSettings">
       <MavenGeneralSettings>
@@ -95,36 +64,36 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "ASKED_SHARE_PROJECT_CONFIGURATION_FILES": "true",
-    "Application.GarageManagementApiApplication.executor": "Run",
-    "JUnit.BillingServiceTest.executor": "Run",
-    "JUnit.PricingServiceTest.executor": "Run",
-    "JUnit.WebhookControllerTest.executor": "Run",
-    "JUnit.controller in garage-management-api.executor": "Run",
-    "JUnit.garagemanagementapi in garage-management-api.executor": "Run",
-    "JUnit.java in garage-management-api.executor": "Run",
-    "Maven.garage-management-api [build].executor": "Run",
-    "Maven.garage-management-api [clean,install,-X].executor": "Run",
-    "Maven.garage-management-api [clean,install].executor": "Run",
-    "Maven.garage-management-api [clean].executor": "Run",
-    "Maven.garage-management-api [mvn...].executor": "Run",
-    "Maven.garage-management-api [run].executor": "Run",
-    "Maven.garage-management-api [spring-boot:run].executor": "Run",
-    "ModuleVcsDetector.initialDetectionPerformed": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "RunOnceActivity.git.unshallow": "true",
-    "SHELLCHECK.PATH": "/Users/marianeferreiradosanjos/Library/Application Support/JetBrains/IdeaIC2025.1/plugins/Shell Script/shellcheck",
-    "git-widget-placeholder": "main",
-    "last_directory_selection": "/Users/marianeferreiradosanjos/garage-management-api/src/main/java/org/example/garagemanagementapi/controller",
-    "last_opened_file_path": "/Users/marianeferreiradosanjos/garage-management",
-    "project.structure.last.edited": "Modules",
-    "project.structure.proportion": "0.15",
-    "project.structure.side.proportion": "0.2",
-    "settings.editor.selected.configurable": "preferences.keymap"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+    &quot;Application.GarageManagementApiApplication.executor&quot;: &quot;Run&quot;,
+    &quot;JUnit.BillingServiceTest.executor&quot;: &quot;Run&quot;,
+    &quot;JUnit.PricingServiceTest.executor&quot;: &quot;Run&quot;,
+    &quot;JUnit.WebhookControllerTest.executor&quot;: &quot;Run&quot;,
+    &quot;JUnit.controller in garage-management-api.executor&quot;: &quot;Run&quot;,
+    &quot;JUnit.garagemanagementapi in garage-management-api.executor&quot;: &quot;Run&quot;,
+    &quot;JUnit.java in garage-management-api.executor&quot;: &quot;Run&quot;,
+    &quot;Maven.garage-management-api [build].executor&quot;: &quot;Run&quot;,
+    &quot;Maven.garage-management-api [clean,install,-X].executor&quot;: &quot;Run&quot;,
+    &quot;Maven.garage-management-api [clean,install].executor&quot;: &quot;Run&quot;,
+    &quot;Maven.garage-management-api [clean].executor&quot;: &quot;Run&quot;,
+    &quot;Maven.garage-management-api [mvn...].executor&quot;: &quot;Run&quot;,
+    &quot;Maven.garage-management-api [run].executor&quot;: &quot;Run&quot;,
+    &quot;Maven.garage-management-api [spring-boot:run].executor&quot;: &quot;Run&quot;,
+    &quot;ModuleVcsDetector.initialDetectionPerformed&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
+    &quot;SHELLCHECK.PATH&quot;: &quot;/Users/marianeferreiradosanjos/Library/Application Support/JetBrains/IdeaIC2025.1/plugins/Shell Script/shellcheck&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
+    &quot;last_directory_selection&quot;: &quot;/Users/marianeferreiradosanjos/garage-management-api/src/main/java/org/example/garagemanagementapi/controller&quot;,
+    &quot;last_opened_file_path&quot;: &quot;/Users/marianeferreiradosanjos/garage-management&quot;,
+    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
+    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
+    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.keymap&quot;
   }
-}]]></component>
+}</component>
   <component name="RecentsManager">
     <key name="MoveClassesOrPackagesDialog.RECENTS_KEY">
       <recent name="org.example.garagemanagementapi.controller" />
Index: src/main/java/org/example/garagemanagementapi/model/Spot.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.garagemanagementapi.model;\n\nimport jakarta.persistence.*;\n\n@Entity\npublic class Spot {\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n    private String sector;\n    private double lat;\n    private double lng;\n    private boolean occupied;\n    private String licensePlate;\n\n    public Long getId() { return id; }\n    public void setId(Long id) { this.id = id; }\n\n    public String getSector() { return sector; }\n    public void setSector(String sector) { this.sector = sector; }\n\n    public double getLat() { return lat; }\n    public void setLat(double lat) { this.lat = lat; }\n\n    public double getLng() { return lng; }\n    public void setLng(double lng) { this.lng = lng; }\n\n    public boolean isOccupied() { return occupied; }\n    public void setOccupied(boolean occupied) { this.occupied = occupied; }\n\n    public String getLicensePlate() { return licensePlate; }\n    public void setLicensePlate(String licensePlate) { this.licensePlate = licensePlate; }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/garagemanagementapi/model/Spot.java b/src/main/java/org/example/garagemanagementapi/model/Spot.java
--- a/src/main/java/org/example/garagemanagementapi/model/Spot.java	(revision 5ce3c54b5a22b3f931e26791c44aa24104a39960)
+++ b/src/main/java/org/example/garagemanagementapi/model/Spot.java	(date 1750191938955)
@@ -4,9 +4,10 @@
 
 @Entity
 public class Spot {
+
     @Id
-    @GeneratedValue(strategy = GenerationType.IDENTITY)
-    private Long id;
+    private Long id;  // Recebe o ID enviado pelo simulador, por isso não geramos
+
     private String sector;
     private double lat;
     private double lng;
@@ -30,4 +31,4 @@
 
     public String getLicensePlate() { return licensePlate; }
     public void setLicensePlate(String licensePlate) { this.licensePlate = licensePlate; }
-}
\ No newline at end of file
+}
Index: src/main/java/org/example/garagemanagementapi/repository/SectorRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/garagemanagementapi/repository/SectorRepository.java b/src/main/java/org/example/garagemanagementapi/repository/SectorRepository.java
new file mode 100644
--- /dev/null	(date 1750192128212)
+++ b/src/main/java/org/example/garagemanagementapi/repository/SectorRepository.java	(date 1750192128212)
@@ -0,0 +1,10 @@
+package org.example.garagemanagementapi.repository;
+
+import org.example.garagemanagementapi.model.Sector;
+import org.springframework.data.jpa.repository.JpaRepository;
+
+import java.util.Optional;
+
+public interface SectorRepository extends JpaRepository<Sector, Long> {
+    Optional<Sector> findBySector(String sector);
+}
Index: src/main/java/org/example/garagemanagementapi/model/Sector.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/garagemanagementapi/model/Sector.java b/src/main/java/org/example/garagemanagementapi/model/Sector.java
new file mode 100644
--- /dev/null	(date 1750191811572)
+++ b/src/main/java/org/example/garagemanagementapi/model/Sector.java	(date 1750191811572)
@@ -0,0 +1,31 @@
+package org.example.garagemanagementapi.model;
+
+import jakarta.persistence.*;
+import lombok.Data;
+
+@Entity
+@Data
+public class Sector {
+
+    @Id
+    @GeneratedValue(strategy = GenerationType.IDENTITY)
+    private Long id;
+
+    @Column(unique = true)
+    private String name;
+
+    @Column
+    private Double basePrice;
+
+    @Column
+    private Integer maxCapacity;
+
+    @Column
+    private String openHour;
+
+    @Column
+    private String closeHour;
+
+    @Column
+    private Integer durationLimitMinutes;
+}
Index: src/main/java/org/example/garagemanagementapi/dto/SpotDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/garagemanagementapi/dto/SpotDTO.java b/src/main/java/org/example/garagemanagementapi/dto/SpotDTO.java
new file mode 100644
--- /dev/null	(date 1750191696758)
+++ b/src/main/java/org/example/garagemanagementapi/dto/SpotDTO.java	(date 1750191696758)
@@ -0,0 +1,11 @@
+package org.example.garagemanagementapi.dto;
+
+import lombok.Data;
+
+@Data
+public class SpotDTO {
+    private Long id;
+    private String sector;
+    private double lat;
+    private double lng;
+}
Index: src/main/java/org/example/garagemanagementapi/dto/SectorDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/garagemanagementapi/dto/SectorDTO.java b/src/main/java/org/example/garagemanagementapi/dto/SectorDTO.java
new file mode 100644
--- /dev/null	(date 1750191647544)
+++ b/src/main/java/org/example/garagemanagementapi/dto/SectorDTO.java	(date 1750191647544)
@@ -0,0 +1,13 @@
+package org.example.garagemanagementapi.dto;
+
+import lombok.Data;
+
+@Data
+public class SectorDTO {
+    private String sector;
+    private double basePrice;
+    private int max_capacity;
+    private String open_hour;
+    private String close_hour;
+    private int duration_limit_minutes;
+}
Index: src/main/java/org/example/garagemanagementapi/dto/GarageConfigDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/garagemanagementapi/dto/GarageConfigDTO.java b/src/main/java/org/example/garagemanagementapi/dto/GarageConfigDTO.java
new file mode 100644
--- /dev/null	(date 1750191621923)
+++ b/src/main/java/org/example/garagemanagementapi/dto/GarageConfigDTO.java	(date 1750191621923)
@@ -0,0 +1,11 @@
+package org.example.garagemanagementapi.dto;
+
+import lombok.Data;
+
+import java.util.List;
+
+@Data
+public class GarageConfigDTO {
+    private List<SectorDTO> garage;
+    private List<SpotDTO> spots;
+}
